{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","timerId","this","setInterval","date","Date","setState","toLocaleTimeString","console","log","prevProps","name","props","clearInterval","style","display","marginBottom","Component","buttonStyles","marginRight","height","App","isClockVisible","clockName","className","type","onClick","Math","round","random","ReactDOM","render","document","getElementById"],"mappings":"6MAUMA,E,4MACJC,MAAQ,CACNC,KAAM,I,EAGRC,a,yDAEA,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,EAAa,IAAIC,KAEvB,EAAKC,SAAS,CAAEN,KAAMI,EAAKG,uBAG3BC,QAAQC,IAAI,EAAKV,MAAMC,QACtB,O,gCAGL,SAAmBU,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAEhCH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DT,KAAKU,MAAMD,S,kCAI9E,WACEE,cAAcX,KAAKD,W,oBAGrB,WACE,OACE,8BACE,uBAAMa,MAAO,CAAEC,QAAS,QAASC,aAAc,IAA/C,yBAEG,IACAd,KAAKU,MAAMD,QAJhB,gBAQG,IACAT,KAAKH,MAAMC,Y,GAxCAiB,aA8CLnB,ICpDToB,EAAoC,CACxCC,YAAa,GACbC,OAAQ,IASJC,E,4MACJtB,MAAe,CACbuB,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACP,EAAsCrB,KAAKH,MAAnCuB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKC,UAAU,MAAf,UACE,6CAEA,wBACEC,KAAK,SACLC,QAAS,WACP,EAAKpB,SAAS,CAAEgB,gBAAgB,KAElCR,MAAOI,EALT,wBAUA,wBACEO,KAAK,SACLC,QAAS,WACP,EAAKpB,SAAS,CAAEgB,gBAAgB,KAElCR,MAAOI,EALT,wBAUA,wBACEO,KAAK,SACLC,QAAS,WACP,EAAKpB,SAAS,CAAEiB,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aAE7Cf,MAAOI,EALT,6BAUCI,GAAkB,cAAC,EAAD,CAAOX,KAAMY,W,GA3CtBN,aAiDHI,IC7DfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fe30a85f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name?: number,\n};\n\ntype State = {\n  time: string,\n};\n\nclass Clock extends Component<Props, State> {\n  state = {\n    time: '',\n  };\n\n  timerId!: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({ time: date.toLocaleTimeString() });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <p>\n        <span style={{ display: 'block', marginBottom: 10 }}>\n          Clock name -\n          {' '}\n          {this.props.name}\n        </span>\n\n        Current time:\n        {' '}\n        {this.state.time}\n      </p>\n    );\n  }\n}\n\nexport default Clock;\n","import { Component } from 'react';\nimport './App.scss';\nimport Clock from './components/Clock';\n\nconst buttonStyles: React.CSSProperties = {\n  marginRight: 10,\n  height: 40,\n};\n\ntype Props = {};\ntype State = {\n  isClockVisible: boolean,\n  clockName?: number,\n};\n\nclass App extends Component<Props, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n          style={buttonStyles}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n          style={buttonStyles}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.round(Math.random() * 100) });\n          }}\n          style={buttonStyles}\n        >\n          Set random name\n        </button>\n\n        {isClockVisible && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}